plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

javafx {
    version = "16"
    modules = [ 'javafx.controls' ]
}

application {
    // Define the main class for the application.
<<<<<<< HEAD
    mainClass = 'assignment2.view.CashPaymentView'
    // mainClass = 'assignment2.App'
=======
    mainClass = 'assignment2.App'
    // mainClass = 'assignment2.model.CashPaymentModel'
>>>>>>> 9ca2739f40322e414bb8faf5363706c77429be33
    applicationDefaultJvmArgs = ["--add-opens", "java.base/java.time=ALL-UNNAMED", '-Xss80m']
}

test {
    useJUnitPlatform()
    jvmArgs = ["--add-opens", "java.base/java.time=ALL-UNNAMED", '-Xss80m']
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "/assignment2/view/**"
            ])
        }))
    }
}

jacoco {
    toolVersion = "0.8.8"
}
